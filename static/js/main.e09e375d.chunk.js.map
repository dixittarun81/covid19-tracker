{"version":3,"sources":["components/cards/cards.module.css","components/cards/cards.js","api/index.js","components/charts/charts.js","components/countryPicker/countryPicker.js","App.js","index.js","App.module.css","components/charts/charts.module.css","components/countryPicker/countryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","changeUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","props","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","i","key","App","state","fetchedData","setState","this","image","src","alt","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e09e375d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__2ykPx\",\"card\":\"cards_card__3Lf_r\",\"infected\":\"cards_infected__27Xg6\",\"recovered\":\"cards_recovered__2MzbN\",\"deaths\":\"cards_deaths__1w1UG\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data: {confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading..'\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={3} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={3} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={3} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeUrl = url;\r\n\r\n    if(country){\r\n        changeUrl = `${url}/countries/${country}`;\r\n    }\r\n    \r\n    try {\r\n        const {data:{confirmed,recovered,deaths, lastUpdate}} = await axios.get(changeUrl);  \r\n        \r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    \r\n    const modifiedData = data.map((dailyData) => ({\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate\r\n    }));\r\n\r\n    return modifiedData;\r\n}\r\n\r\nexport const countries = async() => {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n}\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './charts.module.css';\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n  const [dailyData,setDailyData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n        setDailyData(await fetchDailyData());\r\n    }\r\n    \r\n\r\n    fetchApi();\r\n  },[]);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n    ?(\r\n      <Line\r\n      data={{\r\n        labels: dailyData.map(({date}) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({confirmed}) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true\r\n        },{\r\n          data: dailyData.map(({deaths}) => deaths),\r\n          label: 'Deaths',\r\n          borderColor: 'red',\r\n          backgroundColor: 'rgba(255,0,0,0.5)',\r\n          fill: true,\r\n        }],\r\n\r\n      }}\r\n      />):null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgb(65, 105, 225)',\r\n              'rgba(0,255,0,0.5)',\r\n              'rgba(255,0,0,0.5)'\r\n            ],\r\n            data: [confirmed.value,recovered.value,deaths.value]\r\n          }]\r\n        }}\r\n        options={{\r\n          legend: {display: false},\r\n          title: {display: true, text: `Current state in ${country}`}\r\n        }}\r\n      />\r\n    ): null\r\n\r\n  );\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      {country? barChart: lineChart}\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './countryPicker.module.css';\r\nimport {countries} from '../../api';\r\n\r\nconst CountryPicker = (props) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async() =>{\r\n            setFetchedCountries(await countries());\r\n\r\n        }\r\n\r\n        fetchCountries();\r\n    },[setFetchedCountries]);\r\n    \r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => {props.handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n\r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport {Card, Chart, CountryPicker} from './components/index';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport image from './images/image.png';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n      const fetchedData = await fetchData();\r\n      this.setState({data:fetchedData })\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData, country: country });\r\n    }\r\n\r\n    render(){\r\n        const {data,country} = this.state\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={image} alt=\"COVID-19\"/>\r\n                <Card data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App/>,document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__LL0Ig\",\"image\":\"App_image__3kgfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"charts_container__2KEIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countryPicker_formControl__2XS9w\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}